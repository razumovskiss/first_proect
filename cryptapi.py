import telebot  # ask - BotName
from requests import Response
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from settings import settings  # –Ω–∞ —Å–∫–æ–ª—å–∫–æ —è –ø–æ–º–Ω—é, –∏–∑ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ —è –¥–æ—Å—Ç–∞–≤–∞–ª –∞–ø–∏ —Ç–æ–∫–µ–Ω –∫ –±–æ—Ç—É
import requests


bot = telebot.TeleBot(settings['token'])


# bot.send_message(message.chat.id, get_ticker(coin1=message.text))
# –ø–æ–ø—ã—Ç–∞—é—Å—å –µ—â–µ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ –≤—ã–≤–æ–¥–∏—Ç—å –∏ –±–µ–∑ –∫–Ω–æ–ø–æ–∫ –≤–∞–ª—é—Ç—É


def get_ticker(coin1="btc", coin2="usd"):
    response = requests.get(url=f"https://yobit.net/api/3/ticker/{coin1}_{coin2}?ignore_invalid=1").json()
    buy = response[f'{coin1}_usd']['buy']
    sell = response[f'{coin1}_usd']['sell']

    with open("ticker.txt", "w") as file:
        file.write(f'{buy=}\n')
        file.write(f'{sell=}')

    text1 = f'üíé{coin1.upper()}üíé\n'
    text1 += f'üí∞ –¶–µ–Ω–∞ –Ω–∞ –ø–æ–∫—É–ø–∫–µ: {round(buy, 2)}üí≤\n'
    text1 += f'üí∞ –¶–µ–Ω–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂–µ: {round(sell, 2)}üí≤'

    return text1


@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = KeyboardButton('–ù–∞—á–∞—Ç—å!')
    markup.add(btn1)
    text = '–í—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ telegram –±–æ—Ç—É, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –∫—É–ø–ª–∏/–ø—Ä–æ–¥–∞–∂–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã'
    bot.send_message(message.chat.id, text, reply_markup=markup)


@bot.message_handler(regexp='–ù–∞—á–∞—Ç—å')
def send_massage(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    btn1 = KeyboardButton('‚Çø BTC ‚Çø')
    btn2 = KeyboardButton('‚ô¢ ETH ‚ô¢')
    btn3 = KeyboardButton('üê∂ DOGE üê∂')
    btn11 = KeyboardButton('üë®‚Äçüíª –û–± –∞–≤—Ç–æ—Ä–µ')
    markup.add(btn1, btn2, btn3)
    markup.add(btn11)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –¥–ª—è –≤—ã–≤–æ–¥–∞', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def answer(message):
    if message.text == '‚Çø BTC ‚Çø':
        bot.send_message(message.chat.id, get_ticker(coin1='btc'))
    elif message.text == '‚ô¢ ETH ‚ô¢':
        bot.send_message(message.chat.id, get_ticker(coin1='eth'))
    elif message.text == 'üê∂ DOGE üê∂':
        bot.send_message(message.chat.id, get_ticker(coin1='doge'))
    elif message.text == 'üë®‚Äçüíª –û–± –∞–≤—Ç–æ—Ä–µ':
        text_author = '‚úÖ –ê–≤—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞:\n'
        text_author += 'üíª –î–∏–º–µ–Ω—Ç–∏–π –î–µ–Ω–∏–≤–µ—Ä\n'
        text_author += '‚úâÔ∏è TG: @nar1on'
        bot.send_message(message.chat.id, text_author)
    else:
        markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        btn1 = KeyboardButton('‚Çø BTC ‚Çø')
        btn2 = KeyboardButton('‚ô¢ ETH ‚ô¢')
        btn3 = KeyboardButton('üê∂ DOGE üê∂')
        btn11 = KeyboardButton('üë®‚Äçüíª –û–± –∞–≤—Ç–æ—Ä–µ')
        markup.add(btn1, btn2, btn3)
        markup.add(btn11)
        text = '–Ø –µ—â–µ –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–∏–µ –≤–∞–ª—é—Ç—ã, –ª—É—á—à–µ –≤—ã–±–µ—Ä–∏ –∏–∑ —Ç–µ—Ö, –∫–æ—Ç–æ—Ä—ã–µ —è –ø—Ä–µ–¥–ª–∞–≥–∞—é!'
        bot.send_message(message.chat.id, text, reply_markup=markup)


bot.infinity_polling()